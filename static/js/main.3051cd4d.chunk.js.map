{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","React","createElement","className","alert","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","message","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","home","aria-checked","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","style","color","heading","rows","value","onChange","e","target","backgroundColor","newText","showAlert","document","getElementById","select","navigator","clipboard","writeText","newtext","split","join","length","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3051cd4d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n  return (\r\n    <div className=\"my-3\">\r\n     { props.alert &&\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}\r\n        {/* <button\r\n          type=\"button\"\r\n          className=\"btn-close\"\r\n          data-bs-dismiss=\"alert\"\r\n          aria-label=\"Close\"\r\n        ></button> */}\r\n      </div>}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <>\r\n      <nav\r\n        className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n      >\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse x\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                  {props.home}\r\n                </a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\">\r\n                  {props.about}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            \r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"} mx-2`}>\r\n              <input\r\n                className=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                role=\"switch\"\r\n                aria-checked= {true}\r\n                id=\"flexSwitchCheckDefault\"\r\n                onClick={props.toggleMode}\r\n              />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n                Enable dark mode\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  home: PropTypes.string.isRequired,\r\n  about: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  home: \"set home here\",\r\n  about: \"about text here\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n  const handleUpperClick = () => {\r\n    // console.log(\"uppercase clicked\");\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to upper case\", \"success\")\r\n  };\r\n  const handleLowerClick = () => {\r\n    // console.log(\"uppercase clicked\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lower case\", \"success\")\r\n  };\r\n  const handleClear = () => {\r\n    // console.log(\"uppercase clicked\");\r\n    setText(\"\");\r\n    props.showAlert(\"Cleared!\", \"success\")\r\n  };\r\n  const handleOnChange = (e) => {\r\n    // console.log(\"handleOnChange clicked\");\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied to clipboard\", \"success\")\r\n  };\r\n\r\n  const handleSpace = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    setText(newtext.join(\" \"));\r\n    props.showAlert(\"Extra whitespaces removed\", \"success\")\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"gray\" }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"8\"\r\n            value={text}\r\n            id=\"myBox\"\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"gray\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"gray\",\r\n            }}\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpperClick}>\r\n          Convert to uppper case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLowerClick}>\r\n          Convert to lower case\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClear}>\r\n          Clear All\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy to Clipboard\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleSpace}>\r\n          Remove Extra space\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-2 mx-2\" style={{ color: props.mode === \"dark\" ? \"white\" : \"gray\" }}>\r\n        <h2>Your text here</h2>\r\n        <p>\r\n          {(text.split(/[ ]+/).length)-1} words & {text.length} characters  \r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport Alert from \"./components/Alert\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#0f3556\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enabled\", \"success\");\n    }\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} home=\"Home\" about=\"About\" />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element={<About />} /> */}\n            {/* <Route */}\n              {/* exact path=\"/\" */}\n              {/* element={ */}\n                <TextForm\n                  heading=\"Enter the text to analyze below\"\n                  showAlert={showAlert}\n                />\n              {/* } */}\n            {/* /> */}\n          {/* </Routes> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}